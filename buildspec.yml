version: 0.2

env:
  variables:
    AWS_REGION: "us-east-1" # Set the AWS Region
    REPOSITORY_NAME: "myrepo/cicd" # ECR repository name
    GITHUB_REPO: "https://github.com/Rahuljondhale853/nodejs" #ECR repository name
     AWS_ACCOUNT_ID: "337909742643" # AWS Account ID

phases:
  install:
    runtime-versions:
      docker: 20
    commands:
      - echo "Installing dependencies and preparing Docker environment..."
      - echo "Logging into Amazon ECR..."
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
  pre_build:
    commands:
      - echo "Setting environment variables..."
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7) # Short Git commit hash for the image tag
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPOSITORY_NAME
      - echo "Image tag is $IMAGE_TAG"
      - echo "Repository URI is $REPOSITORY_URI"
  build:
    commands:
      - echo "Building Docker image..."
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
      - echo "Pushing Docker image to Amazon ECR..."
      - docker push $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo "Updating ECS service..."
      - echo "Creating ECS Task Definition JSON..."
      - echo "{\"containerDefinitions\":[{\"name\":\"nodejs\",\"image\":\"$REPOSITORY_URI:$IMAGE_TAG\",\"essential\":true,\"portMappings\":[{\"containerPort\":3005,\"protocol\":\"tcp\"}]}]}" > task-def.json
      - aws ecs register-task-definition \
          --family nodejsApp \
          --execution-role-arn arn:aws:iam::337909742643:role/ecsTaskExecutionRole \
          --container-definitions file://task-def.json
      - aws ecs update-service \
          --cluster my-app-container \
          --service my-app-service \
          --force-new-deployment

artifacts:
  files:
    - '**/*'

cache:
  paths:
    - node_modules/**/* # Caches Node.js dependencies to speed up builds


